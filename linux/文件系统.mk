+ ls
-a: 全部的文件，连同隐藏文件
-d: 仅列出目录本身，而不是列出目录内的文件数据
-l: 长数据串行出，包含文件的属性与权限等等数据

#### 1 复制、删除与移动
+ cp: 复制文件
cp [选项] 来源文件 目标文件
-a: 复制后的文件和源文件一摸一样。
-i: 若目标文件已经存在时，在覆盖时会先询问动作的进行
-p: 连同文件的属性(权限、用户、时间)一起复制过去，而非使用默认属性(常用于备份)
-r: 递归持续复制，用于目录的复制行为。

+ rm: 移除文件或目录
-f: 忽略不存在的文件，不会出现警告讯息；
-i: 互动模式，在删除前会询问使用者是否动作
-r: 递归删除，最常用的目录删除，非常危险

+mv：移动文件与目录，或更名
-f: 若目标文件已经存在，不会询问直接覆盖
-i: 若目标文件已经存在，询问是否覆盖
-u: 若目标文件已经存在，且source比较新，才会更新。

#### 文件内容查询
+ cat: 从第一行开始显示文件内容
-b：显示行号，空白行不显示行号
-n：显示行号，连同空白行也会有行号

+ tac: 从最后一行开始显示
+ nl：显示的时候，顺道输出行号

+ more: 一页一页的显示文件内容
向下翻页：空格键
向下翻一行：Enter
/字符串：在显示的页面中，寻找【字符串】关键字
q: 立刻离开more
b || ctrl-b: 代表往回翻页，只对文件有用
:f : 显示文件名以及目前显示的行数

+ less: 和more类似，可以往前翻页
可以使用[pageup][pagedown]往前后翻看文件

+ head: 只看头几行
-n: 代表显示几行

+ tail: 只看尾巴几行
+ od: 以二进制的方式读取文件内容

### 2 文件系统
superblock: 记录此文件系统的整体信息，包括inode以及block的总量，使用量，剩余量以及操作系统的格式与相关信息等。
inode: 记录文件的属性，一个文件占用一个inode，并记录该文件数据所在的block号。
block: 实际记录文件的内容。

#### 2.1 磁盘与目录的容量
+ df: 列出文件系统的整体磁盘使用量；
-a: 列出所有文件系统，包括系统特有的/proc等文件系统
-k/-m: 以KBytes/MBytes的容量显示各文件系统
-h: 以人们较易阅读的GBytes, MBytes, KBytes等格式自行显示
-i: 不用磁盘容量，而已inode的数量来显示

#### 2.2 实体链接和符号链接：ln
hardlink(实体链接)：只是在某个目录下新增一笔档名链接到某inode号码的关联记录。
	ln /etc/crontab
hardlink是有限制的：
1. 不能跨Filesystem：不能够跨文件系统
2. 不能link目录：不能实体链接目录

Symbolic Link: 符号链接，快捷方式
Symbolic link：就是再建立一个独立的文件，而这个文件会让数据的读取指向他link的那个文档的档名。
只是利用文件来作为指向的动作。当来源档被删除之后，symbolic link的文件会打开不了
	ln -s /etc/crontab crontab2
两个文件指向不同的inode号码